// [1차] 비밀지도
// /n       	5
// arr1	[9, 20, 28, 18, 11]
// arr2	[30, 1, 21, 17, 28]
// 출력	["#####","# # #", "### #", "# ##", "#####"]
//9에대한 [0,1,0,0,1]
//30에 대한[1,1,1,1,0]
//9+30 = [1,1,1,1,1]
//1일때 # 0일때 ''공백
function solution(n, arr1, arr2) {
    let result = []  // 결과를 담을 배열 선언
    for (let i = 0; i < n; i++) {  // 배열의 요소 수만큼 반복
        let x1 = arr1[i].toString(2)  // arr1의 i번째 요소를 2진수로 변환하여 x1에 저장
        let x2 = arr2[i].toString(2)  // arr2의 i번째 요소를 2진수로 변환하여 x2에 저장
        
        let max = Math.max(x1.length, x2.length)  // x1과 x2의 길이 중 최대값을 찾음
        x1 = x1.padStart(max,'0')  // x1의 길이가 max와 같아질 때까지 앞에 0을 채움
        x2 = x2.padStart(max,'0')  // x2의 길이가 max와 같아질 때까지 앞에 0을 채움
        let answer = ''  // 한 줄에 대한 결과를 담을 변수
        for (let j = x1.length-n; j < x1.length; j++) {  // x1과 x2의 마지막 요소부터 n개씩 반복
            if (x1[j] === '1' || x2[j] === '1') {  // 둘 중 하나라도 '1'이면
                answer += '#';  // '#'을 추가
            } else {
                answer += ' ';  // 그렇지 않으면 공백을 추가
            }
        }
        result.push(answer)  // 한 줄의 결과를 result에 추가
    }
    return result  // 결과를 반환
}


// arr1:  9 -> 1001
//        20 -> 10100
//        28 -> 11100
//        18 -> 10010
//        11 -> 1011

// arr2:  30 -> 11110
//         1 -> 1
//        21 -> 10101
//        17 -> 10001
//        28 -> 11100


console.log(solution(5, [9, 20, 28, 18, 11], [30, 1, 21, 17, 28]))
console.log(solution(6, [46, 33, 33 ,22, 31, 50], [27 ,56, 19, 14, 14, 10]))