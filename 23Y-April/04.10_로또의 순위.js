//로또의 최고 순위와 최저 순위

//  1부터 45까지의 숫자 중 6개를 찍어서 맞히기
// //순위	당첨 내용 / 당첨번호에는 0 미포함
// 1	6개 번호가 모두 일치
// 2	5개 번호가 일치
// 3	4개 번호가 일치
// 4	3개 번호가 일치
// 5	2개 번호가 일치
// 6(낙첨)	그 외
// //   당첨 번호	31	10	45	1	6	19	결과
// 최고 순위 번호	31	0→10	44	1	0→6	25	4개 번호 일치, 3등
// 최저 순위 번호	31	0→11	44	1	0→7	25	2개 번호 일치, 5등
//순서와 상관없이, 구매한 로또에 당첨  번호와 일치하는 번호가 있으면 맞힌 걸로 인정됩니다.

//    민우번호:lottos	        로또번호:win_nums    	result
// [44, 1, 0, 0, 31, 25]	[31, 10, 45, 1, 6, 19]	[3, 5] => [최대 3등, 최소 5등]
//  [0, 0, 0, 0, 0, 0]	   [38, 19, 20, 40, 15, 25]	[1, 6]
// [45, 4, 35, 20, 3, 9]	[20, 9, 3, 45, 4, 35]	[1, 1]

//전략  (0) 틀잡기 => 정렬 > 2중for문(번호0일때 0개수 파악& 같은 번호 파악) > rank배열 생성(switch문 길이줄여줌) >if와 switch로 랭크값 뽑아내기 
//     (1)두 배열 모두 정렬화 sort =>>완전 핵심포인트 ㅠㅠㅠ 왜냐면 0찾는경우의 가짓수를 최대한으로 줄여줌
//     (2) i 위치(인덱스) 끼리 맞나 확인 후 2가지 경우로 나눠짐
//     (2-1-1) 인덱스끼리 맞는게 아무것도 없을경우 => 민우번호에 0 갯수 카운트 => 0 있다? 0의 갯수 = 최대순위 , 최소 순위 = 6   
//     (2-1-2) 인덱스끼리 맞는게 부분 있을 경우 => 민우번호에 0 갯수 카운트 + 0말고 다른 숫자 맞는 부분
//     (2-2-1) 민우번호를 0 없이 아예 로또 번호랑 안맞게 준 경우 => 6 반환
//     (3) 0의 갯수 카운트 => indexOf()를 이용 결과 값을 ture => 인덱스 번호, false => -1로 해주기 때문에 결과값에 절대값abs붙여준다음 더하기
function solution(l, w) {
    l.sort((a, b) => a - b);
    w.sort((a, b) => a - b);
    var countzero = 0;
    var countnum = 0;

    for (let i = 0; i < l.length; i++) {
        if (l[i] === 0) {
            countzero++;
        }
        for (let j = 0; j < l.length; j++) {
            if (l[i] === w[j]) {
                countnum++;
            }
        }
    }
    let x = countnum + countzero //최대 다맞을경우 //이 값을 rank배열에 index로 활용
    var rank = [6, 6, 5, 4, 3, 2, 1]//등수를 swtich에서 뽑아쓰기 => index를 사용해서 뽑을거다

    if (countzero > 0) {
        switch (x) {
            case x:
                return [rank[x], rank[x - countzero]]
        }
    } else {
        switch (x) {
            case x:
                return [rank[x], rank[x]]
        }
    }
}



console.log(solution([44, 1, 0, 0, 31, 25], [31, 10, 45, 1, 6, 19])) //최대 4개 / 최저 4-2개
console.log(solution([0, 0, 0, 0, 0, 0], [38, 19, 20, 40, 15, 25])) ////최대 6개 / 최저 6-6개
console.log(solution([45, 4, 35, 20, 3, 9], [20, 9, 3, 45, 4, 35])) ////최대 6개 / 최저 6개